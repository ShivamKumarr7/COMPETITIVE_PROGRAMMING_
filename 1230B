/* shivam */
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}
 
int main() 
{
    fastio();
    int n,k;
    cin>>n>>k;
    string s;
    cin>>s;
    if(k == 0)
    {
        cout<<s<<"\n";
    }
    else if(n == 1)
    {
        // 1 2 3 4 5 6 7 8 9 
        if(k == 0)
        {
            cout<<s<<"\n";
        }
        else
        {
            cout<<"0"<<"\n";
        }
    }
    else
    {
        if(s[0] == '1')
        {
            // 1 0 0 0 0 1 
            
            int start = 1;
            while(k > 0 && start < n)
            {
                if(s[start] == '0')
                {
                    start += 1;
                }
                else
                {
                    s[start] = '0';
                    k = k - 1;
                    start += 1;
                }
            }
            cout<<s<<"\n";
        }
        else
        {
            // 2 1 0 4 5 
            // 3 5 
            // 9 8 7 
            if(k == 1)
            {
                s[0] = '1';
                cout<<s<<"\n";
            }
            else
            {
                s[0] = '1';
                k = k - 1;
                int start = 1;
                while(k > 0 && start < n)
                {
                    if(s[start] == '0')
                    {
                        start += 1;
                    }
                    else
                    {
                        s[start] = '0';
                        k = k - 1;
                        start += 1;
                    }
                }
                cout<<s<<"\n";
            }
            
        }
    }
    return 0;
}
