// 1676D

#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define mp make_pair
#define pi 3.14159265
#define mod 1000000007
#define ppb pop_back
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
const int Max = 1e5 + 5;
const int Bmax = 1e7 + 5;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t = 1;
    cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        vector<vector<ll>>v(n,vector<ll>(m,0));
        vector<vector<ll>>finals(n,vector<ll>(m,0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                cin>>v[i][j];
            }
        }
        ll maxi = -123;
        for(int i=0;i<n;i++)
        {
            int row = i;
            for(int j=0;j<m;j++)
            {
                ll sum = 0;
                int col = j;
                for(int k=(row-1);k>=0;k--)
                {
                    int times = 1;
                    while((times > 0) && (col > 0))
                    {
                        sum = sum + v[k][col-1];
                        col = col - 1;
                        times = times - 1;
                    }
                }
                col = j;
                for(int l=(row+1);l<n;l++)
                {
                    int times = 1;
                    while((times > 0) && (col < (m-1)))
                    {
                        sum = sum + v[l][col+1];
                        col = col + 1;
                        times = times - 1;
                    }
                }
                sum += v[i][j];
                finals[i][j] += sum;
            }
        }
        for(int i=0;i<m;i++)
        {
            int col = i;
            for(int j=0;j<n;j++)
            {
                int row = j;
                ll sum = 0;
                for(int k=(col+1);k<m;k++)
                {
                    int times = 1;
                    while((times > 0) && (row > 0))
                    {
                        sum += v[row-1][k];
                        times = times - 1;
                        row = row - 1;
                    }
                }
                row = j;
                for(int l=(col-1);l>=0;l--)
                {
                    int times = 1;
                    while((times > 0) && (row < (n-1)))
                    {
                        sum += v[row+1][l];
                        times = times - 1;
                        row = row + 1;
                    }
                }
                finals[j][i] += sum; 
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(finals[i][j] > maxi)
                {
                    maxi = finals[i][j];
                }
            }
        }
        cout<<maxi<<"\n";
    }
    return 0;
}
