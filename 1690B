/* shivam */ 

#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}


int main() 
{
    fastio();
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<int>v1(n,0);
        vector<int>v2(n,0);
        int maxi_in_v1 = 0;
        int maxi_in_v2 = 0;
        for(int i=0;i<n;i++)
        {
            cin>>v1[i];
            maxi_in_v1 = max(maxi_in_v1,v1[i]);
        }
        for(int i=0;i<n;i++)
        {
            cin>>v2[i];
            maxi_in_v2 = max(maxi_in_v2,v2[i]);
        }
        if(v1 == v2)
        {
            cout<<"YES\n";
        }
        else
        {
            int diff = maxi_in_v1 - maxi_in_v2;
            if(diff < 0)
            {
                cout<<"NO\n";
            }
            else
            {
                vector<int>v3(n,0);
                for(int i=0;i<n;i++)
                {
                    v3[i] = v1[i] - diff;
                }
                // debug(v1);
                // debug(v2);
                // debug(v3);
                bool check = true;
                for(int i=0;i<n;i++)
                {
                    if(v3[i] == v2[i])
                    {
                        ;
                    }
                    else
                    {
                        if(v3[i] < 0 && v2[i] == 0)
                        {
                            ;
                        }
                        else
                        {
                            check = false;
                            break;
                        }
                    }
                }
                if(check)
                {
                    cout<<"YES\n";
                }
                else
                {
                    cout<<"NO\n";
                }
            }
        }
    }
    return 0;
}
