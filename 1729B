/* shivam */ 
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}
 
int main() 
{
    vector<char>freq(261,'.');
    freq[1] = 'a';
    freq[2] = 'b';
    freq[3] = 'c';
    freq[4] = 'd';
    freq[5] = 'e';
    freq[6] = 'f';
    freq[7] = 'g';
    freq[8] = 'h';
    freq[9] = 'i';
    freq[100] = 'j';
    freq[110] = 'k';
    freq[120] = 'l';
    freq[130] = 'm';
    freq[140] = 'n';
    freq[150] = 'o';
    freq[160] = 'p';
    freq[170] = 'q';
    freq[180] = 'r';
    freq[190] = 's';
    freq[200] = 't';
    freq[210] = 'u';
    freq[220] = 'v';
    freq[230] = 'w';
    freq[240] = 'x';
    freq[250] = 'y';
    freq[260] = 'z';
    fastio();
    int q;
    cin>>q;
    while(q--)
    {
        int n;
        cin>>n;
        string t;
        cin>>t;
        string res = "";
        for(int i=n-1;i>=0;i--)
        {
            if(t[i] != '0')
            {
                int temp = t[i] - '0';
                res.pb(freq[temp]);
            }
            else
            {
                int char1 = (t[i] - '0');
                int char2 = (t[i-1] - '0');
                int char3 = (t[i-2] - '0');
                int final = ((char1 * (pow(10,0))) + (char2 * (pow(10,1))) + (char3 * (pow(10,2))));
                res.pb(freq[final]);
                i = i - 2;
            }
        }
        reverse(all(res));
        cout<<res<<"\n";
    }
    return 0;
}
