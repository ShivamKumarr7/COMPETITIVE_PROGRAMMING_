#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define pi 3.14159265
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
const int Max = 1e5 + 5;
const int Bmax = 1e7 + 5;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<pair<int,int>>kaam_ka(n);
        int zeros = 0;
        int ones = 0;
        ll maxi = -1;
        int index = 0;
        for(int i=0;i<n;i++)
        {
            int temp;
            cin>>temp;
            kaam_ka[i].first = temp;
            temp == 0 ? zeros++ : ones++;
        }
        for(int i=0;i<n;i++)
        {
             int temp;
             cin>>temp;
             kaam_ka[i].second = temp;
             if(temp > maxi)
             {
                 maxi = temp;
                 index = i;
             }
        }
        if(zeros == ones)
        {
            sort(kaam_ka.begin(),kaam_ka.end(),greater<pair<int,int>>());
            ll ans1 = 0;
            ll ans2 = 0;
            ans1 += kaam_ka[ones-1].second;
                for(int i=ones;i<n;i++)
                {
                    ans1 += (2*(kaam_ka[i].second));
                }
                for(int i=0;i<ones-1;i++)
                {
                    ans1 += (2*(kaam_ka[i].second));
                }
            ans2 += kaam_ka[n-1].second;
                for(int i=ones;i<n-1;i++)
                {
                    ans2 += (2*(kaam_ka[i].second));
                }
                for(int i=0;i<ones;i++)
                {
                    ans2 += (2*(kaam_ka[i].second));
                }    
            ll ans = max(ans1,ans2);
            cout<<ans<<"\n";
        }
        else
        {
        sort(kaam_ka.begin(),kaam_ka.end(),greater<pair<int,int>>());
        int less_konsa = min(zeros,ones);
        ll ans = 0;
        for(int i=0;i<less_konsa;i++)
        {
            ans += (2*(kaam_ka[i].second));
        }
        for(int i=ones;i<(ones+less_konsa);i++)
        {
            ans += (2*(kaam_ka[i].second));
        }
        for(int i=less_konsa;i<ones;i++)
        {
            ans += kaam_ka[i].second;
        }
        for(int i=(ones+less_konsa);i<n;i++)
        {
            ans += kaam_ka[i].second;
        }
        cout<<ans<<"\n";
        }
    }
    return 0;
}
