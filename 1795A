/* shivam */
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}
 
bool helper(string s,string t)
{
    for(int i=0;i<s.size()-1;i++)
    {
        if((s[i] == 'R' && s[i+1] == 'B') || (s[i] == 'B' && s[i+1] == 'R'))
        {
            ;
        }
        else
        {
            return false;
        }
    }
    for(int i=0;i<t.size()-1;i++)
    {
        if((t[i] == 'R' && t[i+1] == 'B') || (t[i] == 'B' && t[i+1] == 'R'))
        {
            ;
        }
        else
        {
            return false;
        }
    }
    return true;
}
int main() 
{
    fastio();
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        string s;
        cin>>s;
        string t;
        cin>>t;
        bool check1 = true;
        bool check2 = true;
        int idx1 = -1;
        int idx2 = -1;
        for(int i=0;i<(n-1) && n != 1;i++)
        {
            if((s[i] == 'B' && s[i+1] == 'R') || (s[i] == 'R' && s[i+1] == 'B'))
            {
                ;
            }
            else
            {
                check1 = false;
                idx1 = i;
                break;
            }
        }
        for(int i=0;i<(m-1) && m != 1;i++)
        {
            if((t[i] == 'B' && t[i+1] == 'R') || (t[i] == 'R' && t[i+1] == 'B'))
            {
                ;
            }
            else 
            {
                check2 = false;
                idx2 = i;
                break;
            }
        }
        // debug(idx1)
        // debug(idx2)
        if(n == 1 && m == 1)
        {
            cout<<"YES\n";
        }
        else if(check1 && check2)
        {
            cout<<"YES\n";
        }
        else if(check1 == true && check2 == false && idx2 != -1)
        {
            string add = "";
            for(int i=m-1;i>idx2;i--)
            {
                add.push_back(t[i]);
                t.pop_back();
            }
            s += add;
            // now again check for both 
            bool final = helper(s,t);
            if(final)
            {
                cout<<"YES\n";
            }
            else
            {
                cout<<"NO\n";
            }
        }
        else if(check1 == false && check2 == true && idx1 != -1)
        {
            string add = "";
            for(int i=n-1;i>idx1;i--)
            {
                add.push_back(s[i]);
                s.pop_back();
            }
            t += add;
            bool final = helper(s,t);
            if(final)
            {
                cout<<"YES\n";
            }
            else
            {
                cout<<"NO\n";
            }
        }
        else
        {
            cout<<"NO\n";
        }
    }
    return 0;
}
