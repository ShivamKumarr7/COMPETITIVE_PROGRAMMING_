/* shivam */
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}


int main()
{
    fastio();
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<int>a(n,0);
        int maxi_in_a = -1;
        for(int i=0;i<n;i++)
        {
            cin>>a[i];
            maxi_in_a = max(maxi_in_a,a[i]);
        }
        int maxi_in_b = -1;
        vector<int>b(n,0);
        for(int i=0;i<n;i++)
        {
            cin>>b[i];
            maxi_in_b = max(maxi_in_b,b[i]);
        }
        // debug(a)
        // debug(maxi_in_a)
        // debug(b)
        // debug(maxi_in_b)
        if(n == 1)
        {
            cout<<"YES\n";
            // cout<<"line 74\n";
        }
        else
        {
            if(maxi_in_a == a[n-1] && maxi_in_b == b[n-1])
            {
                cout<<"YES\n";
                // cout<<"line 81\n";
            }
            else if(maxi_in_a != a[n-1] && maxi_in_b == b[n-1])
            {
                // cout<<"line 85\n";
                bool check = true;
                for(int i=0;i<n-1;i++)
                {
                    if(a[i] <= a[n-1])
                    {
                        ;
                    }
                    else if(a[i] > a[n-1] && b[i] <= a[n-1])
                    {
                        swap(a[i],b[i]);
                    }
                    else
                    {
                        check = false;
                        break;
                    }
                }
                if(check == false)
                {
                    cout<<"NO\n";
                }
                else
                {
                    int maxi_in_b = 0;
                    for(int i=0;i<n;i++)
                    {
                        maxi_in_b = max(maxi_in_b,b[i]);
                    }
                    if(maxi_in_b == b[n-1])
                    {
                        cout<<"YES\n";
                    }
                    else
                    {
                        cout<<"NO\n";
                    }
                }
            }
            else if(maxi_in_a == a[n-1] && maxi_in_b != b[n-1])
            {
                // cout<<"line 126\n";
                bool check = true;
                for(int i=0;i<n-1;i++)
                {
                    if(b[i] <= b[n-1])
                    {
                        ;
                    }
                    else if(b[i] > b[n-1] && a[i] <= b[n-1])
                    {
                        swap(a[i],b[i]);
                    }
                    else
                    {
                        check = false;
                        break;
                    }
                }
                if(check == false)
                {
                    cout<<"NO\n";
                }
                else
                {
                    int maxi_in_a = 0;
                    for(int i=0;i<n;i++)
                    {
                        maxi_in_a = max(maxi_in_a,a[i]);
                    }
                    if(maxi_in_a == a[n-1])
                    {
                        cout<<"YES\n";
                    }
                    else
                    {
                        cout<<"NO\n";
                    }
                }
            }
            else
            {
                // cout<<"line 167\n";
                bool check = true;
                for(int i=0;i<n-1;i++)
                {
                    if(a[i] <= a[n-1])
                    {
                        ;
                    }
                    else if(a[i] > a[n-1] && b[i] <= a[n-1])
                    {
                        swap(a[i],b[i]);
                    }
                    else
                    {
                        check = false;
                        break;
                    }
                }
                if(check == false)
                {
                    cout<<"NO\n";
                }
                else
                {
                    int maxi_in_b = 0;
                    for(int i=0;i<n;i++)
                    {
                        maxi_in_b = max(maxi_in_b,b[i]);
                    }
                    if(maxi_in_b == b[n-1])
                    {
                        cout<<"YES\n";
                    }
                    else
                    {
                        cout<<"NO\n";
                    }
                }
            }
        }
    }
    return 0;
}
