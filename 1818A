/* shivam */
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long 
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define setbits(x) __builtin_popcount(x)
#define zerobits(x) __builtin_ctz(x)
#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define INF 1e18
#define PI 3.141592653589793238462
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
 
#define debug(x)  cout<<#x<<" : "; _print(x); cout<<"\n";
 
void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(double t) {cout << t;}
void _print(bool t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T> void _print(unordered_set <T> v);
template <class T,class V> void _print(unordered_map <T,V> v);
template <class T, class V> void _print(pair <T, V> p) {_print(p.ff); cout<<" "; _print(p.ss);}
template <class T> void _print(vector <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(set <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T> void _print(multiset <T> v) {for (T i : v) {_print(i); cout << " ";}}
template <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cout << " ";}}
template <class T> void _print(unordered_set <T> v)  {for(T i : v) {_print(i); cout<< " ";}}
template <class T,class V> void _print(unordered_map <T,V> v) {for (auto i : v) {_print(i.ff); cout<<"->"; _print(i.ss); cout<<"\n";}}


int main()
{
    fastio();
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n>>k;
        vector<string>v;
        for(int i=0;i<n;i++)
        {
            string s;
            cin>>s;
            v.pb(s);
        }
        // debug(n)
        // debug(k)
        // debug(v)
        if(n == 1)
        {
            cout<<(1)<<"\n";
        }
        else
        {
            // ++ +- 
            // ++ +-
            
            // + - - + 
            // + - - + 
            
            // ++ -- -- -+ 
            // +---
            // +--+ 
            
            vector<string>opinions;
            for(int i=0;i<k;i++)
            {
                string temp = "";
                for(int j=0;j<n;j++)
                {
                    string value = v[j];
                    temp.push_back(value[i]);
                }
                opinions.pb(temp);
            }
            // debug(opinions)
            unordered_set<int>us;
            for(int i=0;i<k;i++)
            {
                string value = opinions[i];
                char first_opinion = value[0];
                for(int i=1;i<value.size();i++)
                {
                    if(value[i] != first_opinion)
                    {
                        us.insert(i);
                    }
                }
            }
            // debug(us)
            cout<<(n - us.size())<<"\n";
        }
    }
    return 0;
}
